{"version":3,"sources":["themeColors.js","components/Author.js","components/BottomRow.js","components/Links.js","components/Button.js","components/NewQuoteButton.js","components/Text.js","containers/QuoteBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["createColorObject","color","main","dark","tinycolor","darken","toString","Author","name","id","className","BottomRow","children","Link","props","target","rel","Links","text","author","twitterLink","encodeURIComponent","href","Button","join","NewQuoteButton","onClick","Text","QuoteBox","onNewQuoteClick","useState","quotedText","setQuotedText","authorName","setAuthorName","useEffect","fetchRandomQuote","fetch","then","response","json","data","quotes","randomQuote","random","length","quote","catch","error","console","log","App","themeColors","themeColor","setThemeColor","style","randomNum","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEA,SAASA,EAAkBC,GACvB,MAAO,CACHC,KAAMD,EACNE,KAAMC,IAAUH,GAGXI,OAAO,GACPC,YAIE,sBAENN,EAAkB,YAFZ,eAINA,EAAkB,YAJZ,eAMNA,EAAkB,YANZ,eAQNA,EAAkB,YARZ,eAUNA,EAAkB,YAVZ,eAYNA,EAAkB,YAZZ,eAcNA,EAAkB,YAdZ,eAgBNA,EAAkB,YAhBZ,eAkBNA,EAAkB,YAlBZ,eAoBNA,EAAkB,YApBZ,eAsBNA,EAAkB,YAtBZ,eAwBNA,EAAkB,a,OC3BZO,EARA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACI,uBAAMC,GAAG,SAASC,UAAU,SAA5B,oBACaF,MCCNG,EAJG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,qBAAKF,UAAU,YAAf,SAA4BE,K,cCAjCC,EAAO,SAAC,GAA4B,IAA1BD,EAAyB,EAAzBA,SAAaE,EAAY,4BACrC,OACI,6CAAOA,GAAP,IAAcJ,UAAU,OAAOK,OAAO,SAASC,IAAI,sBAAnD,SACKJ,MAkBEK,EAbD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACbC,EAAW,gDAA4CC,mBAAmB,IAAD,OACvEH,EADuE,eAC5DC,IADF,oBAGjB,OACI,qBAAKT,UAAU,QAAf,SACI,cAAC,EAAD,CAAMY,KAAMF,EAAaX,GAAG,cAA5B,SACI,cAAC,IAAD,CAAWC,UAAU,cCTtBa,G,MANA,SAAC,GAA6B,IAA3Bb,EAA0B,EAA1BA,UAAcI,EAAY,6BACxC,OACI,kDAAYA,GAAZ,IAAmBJ,UAAW,CAAC,SAAUA,GAAWc,KAAK,UCIlDC,EANQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACI,cAAC,EAAD,CAAQjB,GAAG,YAAYiB,QAASA,EAAShB,UAAU,iBAAnD,wBCMOiB,EARF,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACZ,OACI,oBAAGT,GAAG,OAAOC,UAAU,OAAvB,UACI,cAAC,IAAD,IADJ,IACqBQ,MC6CdU,EAxCE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAChB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAmB,WACrBC,MAXI,0IAYCC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,IAAMC,EAASD,EAAKC,OAGdC,EAAcD,EADFE,iBAAO,EAAGF,EAAOG,SAGnCX,EAAcS,EAAYxB,QAC1Ba,EAAcW,EAAYG,UAE7BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAQtC,OACI,sBAAKvC,GAAG,YAAYC,UAAU,WAA9B,UACI,cAAC,EAAD,CAAMQ,KAAMa,IACZ,cAAC,EAAD,CAAQvB,KAAMyB,IACd,eAAC,EAAD,WACI,cAAC,EAAD,CAAOf,KAAMa,EAAYZ,OAAQc,IACjC,cAAC,EAAD,CAAgBP,QAXA,WACxBG,IACAO,cCVOe,EApBH,WACR,MAAoCrB,mBAASsB,EAAY,IAAzD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAQ,CACV,YAAaF,EAAWnD,KACxB,iBAAkBmD,EAAWlD,MAQjC,OACI,qBAAKO,UAAU,MAAM6C,MAAOA,EAA5B,SACI,cAAC,EAAD,CAAU1B,gBAPO,WACrB,IAAM2B,EAAYJ,EAAYR,iBAAO,EAAGQ,EAAYP,OAAS,IAC7DS,EAAcE,SCJPC,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.df5cee5e.chunk.js","sourcesContent":["import tinycolor from 'tinycolor2';\r\n\r\nfunction createColorObject(color) {\r\n    return {\r\n        main: color,\r\n        dark: tinycolor(color)\r\n            // Increase value passed to darken to darken\r\n            // hover effects for example \r\n            .darken(4)\r\n            .toString()\r\n    };\r\n}\r\n\r\nexport default [\r\n    // Sunflower yellow\r\n    { ...createColorObject(\"#FFC312\") },\r\n    // Orange\r\n    { ...createColorObject(\"#EE5A24\") },\r\n    // Mint green\r\n    { ...createColorObject(\"#2ed573\") },\r\n    // Grass green\r\n    { ...createColorObject(\"#009432\") },\r\n    // Blue martina\r\n    { ...createColorObject(\"#12CBC4\") },\r\n    // Blue marine\r\n    { ...createColorObject(\"#0652DD\") },\r\n    // Turqish aqua\r\n    { ...createColorObject(\"#006266\") },\r\n    // Lightpurple circumorbital\r\n    { ...createColorObject(\"#5758BB\") },\r\n    // Berry\r\n    { ...createColorObject(\"#ED4C67\") },\r\n    // Magenta\r\n    { ...createColorObject(\"#6F1E51\") },\r\n    // Dark gray\r\n    { ...createColorObject(\"#2d3436\") },\r\n    // Red pigment\r\n    { ...createColorObject(\"#EA2027\") },\r\n];","import React from 'react';\r\n\r\nconst Author = ({ name }) => {\r\n    return (\r\n        <span id=\"author\" className=\"Author\">\r\n            &mdash; {name}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default Author;","import React from 'react';\r\n\r\nconst BottomRow = ({ children }) => {\r\n    return <div className=\"BottomRow\">{children}</div>\r\n}\r\n\r\nexport default BottomRow;","import React from 'react';\r\nimport { FaTwitter } from 'react-icons/fa';\r\n\r\nconst Link = ({ children, ...props }) => {\r\n    return (\r\n        <a {...props} className=\"Link\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {children}\r\n        </a>\r\n    );\r\n}\r\n\r\nconst Links = ({ text, author }) => {\r\n    const twitterLink = `https://twitter.com/intent/tweet?text=${encodeURIComponent(\r\n        `\"${text}\" - ${author}`\r\n    )}&hashtags=quotes`;\r\n    return (\r\n        <div className=\"Links\">\r\n            <Link href={twitterLink} id=\"tweet-quote\">\r\n                <FaTwitter className=\"icon\" />\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Links","import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst Button = ({ className, ...props }) => {\r\n    return (\r\n        <button {...props} className={[\"Button\", className].join(\" \")} />\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst NewQuoteButton = ({ onClick }) => {\r\n    return (\r\n        <Button id=\"new-quote\" onClick={onClick} className=\"NewQuoteButton\">New Quote</Button>\r\n    );\r\n}\r\n\r\nexport default NewQuoteButton;","import React from 'react';\r\nimport { FaQuoteLeft } from 'react-icons/fa';\r\n\r\nconst Text = ({ text }) => {\r\n    return (\r\n        <p id=\"text\" className=\"Text\">\r\n            <FaQuoteLeft /> {text}\r\n        </p>\r\n    );\r\n}\r\n\r\nexport default Text;","import React, { useState, useEffect } from 'react';\r\nimport { random } from 'lodash';\r\n\r\nimport Author from '../components/Author';\r\nimport BottomRow from '../components/BottomRow';\r\nimport Links from '../components/Links';\r\nimport NewQuoteButton from '../components/NewQuoteButton';\r\nimport Text from '../components/Text';\r\n\r\nconst url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\r\n\r\nconst QuoteBox = ({ onNewQuoteClick }) => {\r\n    const [quotedText, setQuotedText] = useState('');\r\n    const [authorName, setAuthorName] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchRandomQuote();\r\n    }, []);\r\n\r\n    const fetchRandomQuote = () => {\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const quotes = data.quotes;\r\n\r\n                const randomNum = random(0, quotes.length);\r\n                const randomQuote = quotes[randomNum];\r\n\r\n                setAuthorName(randomQuote.author);\r\n                setQuotedText(randomQuote.quote);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const handleNewQuoteClick = () => {\r\n        onNewQuoteClick();\r\n        fetchRandomQuote();\r\n    }\r\n\r\n    return (\r\n        <div id=\"quote-box\" className=\"QuoteBox\">\r\n            <Text text={quotedText} />\r\n            <Author name={authorName} />\r\n            <BottomRow>\r\n                <Links text={quotedText} author={authorName} />\r\n                <NewQuoteButton onClick={handleNewQuoteClick} />\r\n            </BottomRow>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuoteBox;","import React, { useState } from 'react';\r\nimport { random } from 'lodash';\r\n\r\nimport themeColors from '../themeColors';\r\nimport QuoteBox from './QuoteBox';\r\n\r\nconst App = () => {\r\n    const [themeColor, setThemeColor] = useState(themeColors[2]);\r\n\r\n    const style = {\r\n        '--primary': themeColor.main,\r\n        '--primary-dark': themeColor.dark,\r\n    };\r\n\r\n    const changeThemeColor = () => {\r\n        const randomNum = themeColors[random(0, themeColors.length - 1)];\r\n        setThemeColor(randomNum);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\" style={style}>\r\n            <QuoteBox onNewQuoteClick={changeThemeColor} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './style.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}